@mixin dimmed($dimmed, $gradient) {
  // TODO: Implement gradient
  @if $dimmed {
    opacity: var(--dimmed-opacity);
  } @else {
    opacity: 1;
  }
}

@mixin dimSentence($gradient) {
  .cm-line {
    @include dimmed(true, $gradient);
  }

  .cm-active.cm-line {
    @include dimmed(false, $gradient);
  }

  .cm-active.cm-line .active-paragraph {
    @include dimmed(true, $gradient);
  }

  .cm-active.cm-line .active-sentence {
    @include dimmed(false, $gradient);
  }
}

@mixin dimUnfocused($gradient) {
  &[data-ptm-dim-unfocused-mode="paragraphs"] {
    &[data-ptm-dim-unfocused-editors-behavior="dim"] {
      &:not(.ptm-dim-unfocused-pause-while-scrolling, .ptm-dim-unfocused-pause-while-selecting) .cm-editor:not(.ptm-first-open),
      &.ptm-dim-unfocused--pause-while-scrolling:not(.ptm-dim-unfocused-pause-while-selecting) .cm-editor:not(.ptm-wheel, .ptm-first-open),
      &.ptm-dim-unfocused-pause-while-selecting:not(.ptm-dim-unfocused-pause-while-scrolling) .cm-editor:not(.ptm-select, .ptm-first-open),
      &.ptm-dim-unfocused-pause-while-scrolling.ptm-dim-unfocused-pause-while-selecting .cm-editor:not(.ptm-wheel, .ptm-select, .ptm-first-open) {
        .CodeMirror-lines:not(.selecting) .CodeMirror-code > :not(.CodeMirror-activeline), .cm-line:not(.cm-active) {
          @include dimmed(true, $gradient);
        }
      }
    }

    &[data-ptm-dim-unfocused-editors-behavior="dim-none"],
    &[data-ptm-dim-unfocused-editors-behavior="dim-all"] {
      &:not(.ptm-dim-unfocused-pause-while-scrolling, .ptm-dim-unfocused-pause-while-selecting) .cm-editor.cm-focused:not(.ptm-first-open),
      &.ptm-dim-unfocused-pause-while-scrolling:not(.ptm-dim-unfocused-pause-while-selecting) .cm-editor.cm-focused:not(.ptm-wheel, .ptm-first-open),
      &.ptm-dim-unfocused-pause-while-selecting:not(.ptm-dim-unfocused-pause-while-scrolling) .cm-editor.cm-focused:not(.ptm-select, .ptm-first-open),
      &.ptm-dim-unfocused-pause-while-scrolling.ptm-dim-unfocused-pause-while-selecting .cm-editor.cm-focused:not(.ptm-wheel, .ptm-select, .ptm-first-open) {
        .CodeMirror-lines:not(.selecting) .CodeMirror-code > :not(.CodeMirror-activeline), .cm-line:not(.cm-active) {
          @include dimmed(true, $gradient);
        }
      }
    }

    &[data-ptm-dim-unfocused-editors-behavior="dim-all"] .cm-editor:not(.cm-focused) {
      .CodeMirror-lines:not(.selecting) .CodeMirror-code, .cm-line {
        @include dimmed(true, $gradient);
      }
    }
  }

  &[data-ptm-dim-unfocused-mode="sentences"] {
    &[data-ptm-dim-unfocused-editors-behavior="dim"] {
      &:not(.ptm-dim-unfocused-pause-while-scrolling, .ptm-dim-unfocused-pause-while-selecting) .cm-editor:not(.ptm-first-open),
      &.ptm-dim-unfocused--pause-while-scrolling:not(.ptm-dim-unfocused-pause-while-selecting) .cm-editor:not(.ptm-wheel, .ptm-first-open),
      &.ptm-dim-unfocused-pause-while-selecting:not(.ptm-dim-unfocused-pause-while-scrolling) .cm-editor:not(.ptm-select, .ptm-first-open),
      &.ptm-dim-unfocused-pause-while-scrolling.ptm-dim-unfocused-pause-while-selecting .cm-editor:not(.ptm-wheel, .ptm-select, .ptm-first-open) {
        @include dimSentence($gradient);
      }
    }

    &[data-ptm-dim-unfocused-editors-behavior="dim-none"],
    &[data-ptm-dim-unfocused-editors-behavior="dim-all"] {
      &:not(.ptm-dim-unfocused-pause-while-scrolling, .ptm-dim-unfocused-pause-while-selecting) .cm-editor.cm-focused:not(.ptm-first-open),
      &.ptm-dim-unfocused-pause-while-scrolling:not(.ptm-dim-unfocused-pause-while-selecting) .cm-editor.cm-focused:not(.ptm-wheel, .ptm-first-open),
      &.ptm-dim-unfocused-pause-while-selecting:not(.ptm-dim-unfocused-pause-while-scrolling) .cm-editor.cm-focused:not(.ptm-select, .ptm-first-open),
      &.ptm-dim-unfocused-pause-while-scrolling.ptm-dim-unfocused-pause-while-selecting .cm-editor.cm-focused:not(.ptm-wheel, .ptm-select, .ptm-first-open) {
        @include dimSentence($gradient);
      }
    }

    &[data-ptm-dim-unfocused-editors-behavior="dim-all"] .cm-editor:not(.cm-focused) {
      @include dimSentence($gradient);
    }
  }
}

