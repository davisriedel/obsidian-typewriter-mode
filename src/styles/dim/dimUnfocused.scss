@mixin applyDimSentence($lineCondition) {
  .cm-line#{$lineCondition} {
    @include dimmed(true);

    &.cm-active {
      @include dimmed(false);
    }

    &.cm-active .active-paragraph {
      @include dimmed(true);
    }

    &.cm-active .active-sentence {
      @include dimmed(false);
    }
  }
}

@mixin applyDim($focusCondition, $mode, $lineCondition) {
  &:not(.ptm-dim-unfocused-pause-while-scrolling, .ptm-dim-unfocused-pause-while-selecting) .cm-editor#{$focusCondition}:not(.ptm-first-open),
  &.ptm-dim-unfocused--pause-while-scrolling:not(.ptm-dim-unfocused-pause-while-selecting) .cm-editor#{$focusCondition}:not(.ptm-wheel, .ptm-first-open),
  &.ptm-dim-unfocused-pause-while-selecting:not(.ptm-dim-unfocused-pause-while-scrolling) .cm-editor#{$focusCondition}:not(.ptm-select, .ptm-first-open),
  &.ptm-dim-unfocused-pause-while-scrolling.ptm-dim-unfocused-pause-while-selecting .cm-editor#{$focusCondition}:not(.ptm-wheel, .ptm-select, .ptm-first-open) {
    @if $mode == 'paragraphs' {
      .CodeMirror-lines:not(.selecting) .CodeMirror-code > :not(.CodeMirror-activeline), 
      .cm-line:not(.cm-active)#{$lineCondition} {
        @include dimmed(true);
      }
    } @else if $mode == 'sentences' {
      @include applyDimSentence($lineCondition);
    }
  }
}

@mixin applyDimUnfocused($mode, $behavior, $lineCondition) {
  &[data-ptm-dim-unfocused-mode="#{$mode}"] {
    &[data-ptm-dim-unfocused-editors-behavior="#{$behavior}"] {
      @if $behavior == "dim" {
        @include applyDim('', $mode, $lineCondition);
      } @else {
        // for dim-none and dim-all
        @include applyDim('.cm-focused', $mode, $lineCondition)
      }

      @if $behavior == 'dim-all' {
        .cm-editor:not(.cm-focused) {
          @if $mode == 'paragraphs' {
            .CodeMirror-lines:not(.selecting) .CodeMirror-code, .cm-line#{$lineCondition} {
              @include dimmed(true);
            }
          } @else if $mode == 'sentences' {
            @include applyDimSentence($lineCondition);
          }
        }
      }
    }
  }
}

$modes: 'paragraphs', 'sentences';
$bahaviors: 'dim', 'dim-none', 'dim-all';

@mixin dimUnfocused($highlightListParent) {
  $lineCondition: if($highlightListParent, ':not(.HyperMD-list-line)', '');
  @each $mode in $modes {
    @each $behavior in $bahaviors {
      @include applyDimUnfocused($mode, $behavior, $lineCondition);
    }
  }
}
